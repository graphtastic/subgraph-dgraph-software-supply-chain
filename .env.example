# This is an example environment file for the Graphtastic subgraph.
#
# To use it, copy this file to '.env':
#   cp .env.example .env
#
# Then, uncomment and modify the variables you need to override. Any variable
# left commented out will use the default value defined in the Makefile.

# ============================================================================
# === CORE CONFIGURATION ===
# ============================================================================

# The main Docker Compose file used by 'make' commands.
# COMPOSE_FILE=docker-compose.yml

# The name of the shared external Docker network that connects services across stacks.
# EXTERNAL_NETWORK_NAME=guac-network


# ============================================================================
# === UNIVERSAL PERSISTENCE CONFIGURATION ===
# ============================================================================

# A single switch to control the data storage mode for ALL services.
# - 'bind': (Default) Mounts directories from your host machine. Data is stored
#           in './runtime-data'. Easy to inspect. Recommended for local dev.
# - 'volume': Use Docker-managed named volumes. More portable, but data is
#             managed by the Docker daemon and is harder to inspect directly.
# PERSISTENCE_MODE=bind

# The base path for all bind-mounted data.
# This is set automatically by the Makefile to be the project's root directory.
# You should not need to override this variable.
# DATA_BASE_PATH=.


# ============================================================================
# === DGRAPH STACK CONFIGURATION ===
# ============================================================================

# Comma-separated list of IP CIDRs allowed to access Dgraph Alpha's admin endpoints.
# The default '0.0.0.0/0' allows access from anywhere, suitable for local development.
# DGRAPH_ALPHA_WHITELIST=0.0.0.0/0

# --- Volume Names (only used if PERSISTENCE_MODE=volume) ---
# DGRAPH_DATA_VOLUME_ZERO=dgraph_zero_data
# DGRAPH_DATA_VOLUME_ALPHA=dgraph_alpha_data


# ============================================================================
# === GUAC STACK CONFIGURATION ===
# ============================================================================

# --- Postgres Credentials ---
# POSTGRES_DB=guac
# POSTGRES_USER=guac
# POSTGRES_PASSWORD=guac

# --- Volume Name (only used if PERSISTENCE_MODE=volume) ---
# GUAC_POSTGRES_DATA_VOLUME=guac_postgres_data


# ============================================================================
# === MESH & EXTRACTOR ENDPOINTS ===
# ============================================================================
# These are the internal endpoints used for service-to-service communication
# inside the Docker network. You typically do not need to override these.

# MESH_ENDPOINT=http://guac-mesh-graphql:4000/graphql
# GUAC_ENDPOINT=http://guac-graphql:8080/query


# ============================================================================
# === TOOLING CONFIGURATION ===
# ============================================================================

# Set to 1 to run tools like the extractor script natively on your host machine.
# By default (0), tools run inside containers for reproducibility and CI/CD parity.
# USE_LOCAL_TOOLS=0


# ============================================================================
# === PORT MAPPINGS ===
# ============================================================================
# These variables control the ports exposed on your host machine (localhost).
# The format is SERVICE_PORT_HOST for the host side and SERVICE_PORT for the
# container side. You only need to change the _HOST variables if you have a
# port conflict on your local machine.

# --- Dgraph Zero Ports ---
# DGRAPH_ZERO_GRPC_PORT_HOST=5081
# DGRAPH_ZERO_HTTP_PORT_HOST=6081
# (Container-side ports, change with caution)
# DGRAPH_ZERO_GRPC_PORT=5080
# DGRAPH_ZERO_HTTP_PORT=6080

# --- Dgraph Alpha Ports ---
# DGRAPH_ALPHA_GRPC_PORT_HOST=9081
# DGRAPH_ALPHA_HTTP_PORT_HOST=8081
# (Container-side ports, change with caution)
# DGRAPH_ALPHA_GRPC_PORT=9080
# DGRAPH_ALPHA_HTTP_PORT=8080

# --- Dgraph Ratel UI Port ---
# DGRAPH_RATEL_PORT_HOST=8001
# (Container-side port, change with caution)
# DGRAPH_RATEL_PORT=8000

# --- GUAC GraphQL Port ---
# GUAC_GRAPHQL_PORT_HOST=8080
# (Container-side port, change with caution)
# GUAC_GRAPHQL_PORT=8080

# --- Mesh GraphQL Port ---
# MESH_GRAPHQL_PORT_HOST=4000
# (Container-side port, change with caution)
# MESH_GRAPHQL_PORT=4000

# --- Postgres Port ---
# POSTGRES_PORT_HOST=5432
# (Container-side port, change with caution)
# POSTGRES_PORT=5432